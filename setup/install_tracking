#!/bin/bash

SETUP_PATH=$(pwd)

tmp_dir=$(mktemp -d -t ci-XXXXXXXXXX)

cd $tmp_dir

apt-get install cmake unzip gcc g++ -y
cd /usr/local
unzip "$SETUP_PATH/xclib.zip"
cd $SETUP_PATH

apt-get install python-dev python-numpy -y
apt-get install python3-dev python3-numpy python3-pip -y
apt-get install libavcodec-dev libavformat-dev libswscale-dev -y
apt-get install libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev -y

pip3 install pybind11

apt-get install libgtk2.0-dev -y
apt-get install libgtk-3-dev -y

apt-get install libpng-dev -y
apt-get install libjpeg-dev -y
apt-get install libopenexr-dev -y
apt-get install libtiff-dev -y
apt-get install libwebp-dev -y
apt-get install libavresample-dev -y
apt-get install -y default-jdk
apt-get install -y openjdk-8-jdk

apt-get install libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev -y
apt-get install libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev -y
apt-get install liblcms2-dev  libtiff-dev libpng-dev libz-dev -y

apt-get install libatlas-base-dev -y
apt-get install libatlas3-base -y
apt-get install liblapacke-dev -y
apt-get install libopenblas-dev -y
apt-get install libjsoncpp-dev -y
apt-get install libc6:i386 libgcc1:i386 gcc-4.6-base:i386 libstdc++5:i386 libstdc++6:i386 -y
apt-get install git -y


#CUDA installation
wget https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.27.04_linux.run
sh cuda_11.2.0_460.27.04_linux.run

#cloning opencv
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git

cd opencv
mkdir build
cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE -D WITH_TBB=ON -D WITH_OPENMP=ON -D WITH_IPP=ON -D BUILD_EXAMPLES=OFF -D WITH_NVCUVID=ON -D WITH_CUDA=ON -D BUILD_DOCS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF -D WITH_CSTRIPES=ON -D WITH_OPENCL=ON -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules -D OPENCV_ENABLE_NONFREE=ON .. 

make -j 20
make install

cd $tmp_dir
